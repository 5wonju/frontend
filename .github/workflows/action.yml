
name: deployment

on:
  push:
    branches:
      - deploy

jobs:
  push-to-gitlab:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "이우성"
          git config user.email "sitpo96@naver.com"

      - name: Rewrite Author Information Based on Conditions
        run: |
          git checkout deploy
          git pull origin deploy
          git checkout -b cleanup
          git filter-branch -f --env-filter '
            OLD_EMAIL="$GIT_AUTHOR_EMAIL";
            CORRECT_NAME="$GIT_AUTHOR_NAME";
            CORRECT_EMAIL="";
            if [ "$GIT_AUTHOR_NAME" = "이원주" ]; then
              CORRECT_EMAIL="dldnjswn4265@gmail.com";
            elif [ "$GIT_AUTHOR_NAME" = "이우성" ]; then
              CORRECT_EMAIL="sitpo96@naver.com";
            elif [ "$GIT_AUTHOR_NAME" = "이재민" ]; then
              CORRECT_EMAIL="cytor@naver.com";
            fi;
            if [ "$OLD_EMAIL" = "101818687+3o14@users.noreply.github.com" ]; then
              GIT_AUTHOR_EMAIL="$CORRECT_EMAIL";
              GIT_COMMITTER_EMAIL="$CORRECT_EMAIL";
              export GIT_AUTHOR_EMAIL;
              export GIT_COMMITTER_EMAIL;
            fi
          ' HEAD
          git filter-branch --force --prune-empty --index-filter "git rm -rf --cached --ignore-unmatch .github" HEAD

      - name: Push to GitLab frontend branch
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          git remote add gitlab https://oauth2:$GITLAB_TOKEN@lab.ssafy.com/s10-final/S10P31D206.git
          git push gitlab frontend:frontend --force
          git checkout deploy
          git branch -D frontend

  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # - name: .env setting
      #   run: |
      #     echo "VITE_DEPLOY_BASE_URL=${{ secrets.VITE_DEPLOY_BASE_URL }}" >> frontend/.env
      #     echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }}" >> frontend/.env
      #     echo "VITE_GOOGLE_REDIRECT_URI=${{ secrets.VITE_GOOGLE_REDIRECT_URI }}" >> frontend/.env
      #     echo "VITE_KAKAO_REST_API_KEY=${{ secrets.VITE_KAKAO_REST_API_KEY }}" >> frontend/.env
      #     echo "VITE_KAKAO_REDIRECT_URI=${{ secrets.VITE_KAKAO_REDIRECT_URI }}" >> frontend/.env

      - name: Push Docker image with tag
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/5wonju-frontend:v${{ github.run_number }}

      - name: Push Docker image latest
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/5wonju-frontend

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker stop frontend || true
            docker rm frontend || true
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/5wonju-frontend:v${{ github.run_number }}
            docker run --name frontend -d \
            -p 3000:3000 \
            --network=bridge \
            --restart unless-stopped \
            ${{ secrets.DOCKERHUB_USERNAME }}/5wonju-frontend:v${{ github.run_number }}
            docker container prune -f
            docker images | grep '${{ secrets.DOCKERHUB_USERNAME }}/5wonju-frontend' | grep -v 'v${{ github.run_number }}' | awk '{print $3}' | xargs -r docker rmi